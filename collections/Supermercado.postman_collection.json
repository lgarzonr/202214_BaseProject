{
	"info": {
		"_postman_id": "d556c855-6f65-4c53-b8a5-1e0d6f6c9e8f",
		"name": "Supermercado",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18013353"
	},
	"item": [
		{
			"name": "Crear un supermercado válido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()",
							"pm.collectionVariables.set(\"supermercado_id\", data.id);",
							"",
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"pricesmart SAS\",\n    \"longitud\": 8099989874.652985746544248,\n    \"latitud\": -74.10166993907832,\n    \"web\": \"www.pricesmart.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Crear un supermercado inválido",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {",
							"    pm.response.to.have.status(412);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"El nombre debe tener más de 10 caracteres\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"OXXO\",\n    \"longitud\": 2345435.23454325345,\n    \"latitud\": -12.10166993907832,\n    \"web\": \"www.oxxo.com\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener todos los supermercados",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of supermarkets > ' + 0, function () {",
							"   var data = pm.response.json()",
							"   pm.expect(data.length).to.greaterThan(0)",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/supermarkets",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un supermercado por ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"   pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/supermarkets/{{supermercado_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						"{{supermercado_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Obtener un supermercado por un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"El supermercado con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/supermarkets/{{supermercado_invalido_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						"{{supermercado_invalido_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un supermercado",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"pricesmart SAS\",\n    \"longitud\": 8099989874.652985746544248,\n    \"latitud\": -74.10166993907832,\n    \"web\": \"www.pricesmart.com.co\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets/{{supermercado_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						"{{supermercado_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Actualizar un supermercado con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"El supermercado con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"nombre\": \"pricesmart SAS\",\n    \"longitud\": 8099989874.652985746544248,\n    \"latitud\": -74.10166993907832,\n    \"web\": \"www.pricesmart.com.co\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets/{{supermercado_invalido_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						"{{supermercado_invalido_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado por su ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets/{{supermercado_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						"{{supermercado_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Eliminar un supermercado con un ID que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"   pm.response.to.have.status(404);",
							"});",
							"",
							"pm.test(\"Get expected error message\", function () {",
							"    var data = pm.response.json();",
							"    pm.expect(data.message).to.eql(\"El supermercado con el id dado no fue encontrado\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/supermarkets/{{supermercado_invalido_id}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"supermarkets",
						"{{supermercado_invalido_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": ""
		},
		{
			"key": "supermercado_id",
			"value": ""
		},
		{
			"key": "supermercado_invalido_id",
			"value": ""
		}
	]
}